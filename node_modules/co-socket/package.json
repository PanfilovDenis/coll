{
  "name": "co-socket",
  "version": "0.0.1-3",
  "description": "compoundjs+socketio",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "socket.io": "latest",
    "compound": ">= 1.1.5-16"
  },
  "devDependencies": {
    "mocha": "1.8.1",
    "should": "1.2.2",
    "semicov": "0.1.1",
    "express": "3.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/compoundjs/socket.git"
  },
  "keywords": [
    "socket.io",
    "railwayjs",
    "kontroller"
  ],
  "author": {
    "name": "Anatoliy Chakkaev"
  },
  "license": "MIT",
  "readme": "## About\n\nSocket.IO bindings for CompoundJS\n\n## Installataion\n\n    npm install co-socket --save\n\nthen add `co-socket` to `config/autoload.js`\n\n## API\n\n### routes\n\n    map.socket('some-event', 'controller#action');\n\nWhen client emit event `some-event`, then `action` action of controller\n`controller` will gain control. Data passed to event will be available as\n`params` variable.\n\n### controller\n\n    action('some-action', function () {\n        socket().emit('event', {some: 'data'}); // send 'event' to current client\n        socket(anotherSessionID).emit('hello'); // send 'hello' to another user\n                                                // identifyed by anotherSessionID\n    });\n\nAny controller action (both socket and non-socket) can emit some event with\nconnected client (current session client). If you want to communicate with\nanother user need to specify session id as param of `socket` method.\n\nOther socket.io API will be available later: join, broadcast, etc..\n\n## License\n\n   MIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/compoundjs/socket/issues"
  },
  "_id": "co-socket@0.0.1-3",
  "dist": {
    "shasum": "071092969c1544a87a77892fae2685afd61821bc"
  },
  "_from": "co-socket@",
  "_resolved": "https://registry.npmjs.org/co-socket/-/co-socket-0.0.1-3.tgz"
}
